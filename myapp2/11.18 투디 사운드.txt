소리 -> 공기 중 매질을 진동시켜 사람의 고막에 들어옴

진폭의 크기- > 소리의 크기를 결정

주파수 -> 초당 주기적으로 얼마나 반복되는가

파형이 반복되는 횟수가 크면 소리가 높게들림. 작으면 낮게들림.

( khz or 샘플링 계산하는거 기말에 나옴 유의 )

파형의 특정 모양이 음색을 결정한다.

남자 여자 가청주파수 다른이유 -> 낼 수 있는 소리의 범위때문

디지털사운드 -> 소리를 직접 녹음하고 재생

합성사운드 -> 악보를통해 악기연주

신디사이저 = 합성한다 (소리합성하는 기계)

ADC = 아날로그 디지털 컨버터, 전압을 측정해 소리를 숫자로 바꿔서 컴퓨터에 전달해줌

샘플링 - 소리를 선택해서 저장한다.

중간값을 이용해 원래값을 유추해낸다 - 보간(인터폴레이션)

주파수가 높으면 샘플링을 듬성듬성하면 보간하기 힘들다 -> 조밀하게 샘플링해야 원래값 복원

샘플링하는법 - 원래 소리의 헤르츠(주파수) * 2 번 샘플링 하면됨

2000hz = 20khz

일반전화기 = 8khz -> 전화기로 노래들려주면 제대로 안들리는 이유임. 샘플링을 얼마 안하기때문

사람의 목소리는 4000hz까지 낼 수 있기때문에 샘플링을 굳이 많이 할 필요가 없음

생방등의 방송은 44.1khz로 샘플링해서 내보내는것

*4분짜리 노래를 40khz로 샘플링, 스테레오 비트수는 16비트로 샘플링한다. 컴퓨터에 저장하면
몇 바이트로 저장되는가?* 기말고사에 나옴

- 38 메가바이트

조건 : 40khz = 40000
비트 : 16bit = 2byte
stereo : 2
4분 : 4 * 60 = 240초

40000 * 2 * 2 * 240 = 3840000 = 38 메가바이트

샘플링헤르츠 * 바이트 * 채널수 * 시간 = 파일의 크기

mp3 파일들은 대부분 3~4메가 비트수가 반토막이라서

믹서 - 한꺼번에 소리를 섞는다


미디 - 합성에 쓰인다

믹서의 채널 - 왼쪽 or 오른쪽

채널 - 소리를 전달하는 통로
채널별로 소리가 다르게 나온다.
모노 - 1, 스테레오 - 2, 영화 - 5.1, 7.1

청크 - 일정한 크기를 가지는 사운드 데이터
스테레오는 레프트청크, 라이트청크 두개 가진다

ogg파일은 공짜임!!! mp3 to ogg 변환기를 통해 바꾼다음에 플레이하면 저작권문제가 없음

메인스테이트에서 직접 플레이안하고 보이한테 사운드플레이 넘겨줌. 코드의 확장과 이해가 쉬워짐

좀 더 객체지향적인 관점에서 코딩할려고 한거임. 사운드를 바로 안내고 객체한테 일을 맡기는 식으로

해줘야 나중에 바꾸기가 쉬움

객체지향 - 객체와 객체간의 행위를 객체가 하게끔 냅두는게 객체지향적 프로그래밍

게임플레이영상 1분짜리와 발표자료는 없음.

커밋로그와 커밋그래프를 프린트해서 제출하셈